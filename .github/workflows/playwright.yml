name: Run Playwright Automation Tests

on:
  workflow_dispatch:  # Trigger workflow manually using the 'Run workflow' button

jobs:
  run-ui-tests:
    name: Run Playwright UI Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies for UI Tests
        working-directory: ./ui
        run: npm ci

      - name: Install Playwright Browsers
        working-directory: ./ui
        run: npx playwright install --with-deps

      - name: Run Playwright UI Tests
        working-directory: ./ui
        run: npx playwright test --workers 1 --project QA_UI
        continue-on-error: true

      - name: Upload Playwright UI Report as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ui-test-report
          path: ./ui/playwright-report
          expire-in: 14d  # Set expiration time for the artifact

  run-api-tests:
    name: Run API Tests
    runs-on: ubuntu-latest
    needs: run-ui-tests
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Create Server Directory
        run: mkdir -p server

      - name: Download JAR File from Cloud
        run: |
          wget --output-document=server/demo-0.0.1-SNAPSHOT.jar "https://firebasestorage.googleapis.com/v0/b/flashmart-c51b3.appspot.com/o/demo-0.0.1-SNAPSHOT.jar?alt=media&token=df7721d4-e5fd-416a-9a26-a550bf1d0a53"

      - name: Start the JAR File
        run: |
          nohup java -jar server/demo-0.0.1-SNAPSHOT.jar > server.log 2>&1 &
          echo "Waiting for the server to start..."
          until curl --silent --head http://localhost:7081/api/books; do
            echo "Server not ready yet. Retrying in 2 seconds..."
            sleep 2
          done
          echo "Server is up and running."

      - name: Upload Server Log for Debugging
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: server-log
          path: server.log


      - name: Install Node.js and Dependencies for API Tests
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies for API Tests
        working-directory: ./api
        run: npm ci

      - name: Run Playwright API Tests
        working-directory: ./api
        run: npx playwright test --project QA_API
        continue-on-error: true

      - name: Upload Playwright API Report as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: api-test-report
          path: ./api/playwright-report  # Download the whole report directory
          expire-in: 14d  # Set expiration time for the artifact

      - name: Stop the Server
        run: |
          pkill -f 'java -jar server/demo-0.0.1-SNAPSHOT.jar'


  publish-reports:
    name: Publish Playwright Reports to GitHub Pages
    runs-on: ubuntu-latest
    needs: [ run-ui-tests, run-api-tests ]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download UI Test Report
        uses: actions/download-artifact@v3
        with:
          name: ui-test-report
          path: ./public/ui-report

      - name: Download API Test Report
        uses: actions/download-artifact@v3
        with:
          name: api-test-report
          path: ./public/api-report

      - name: List Downloaded Files for Debugging
        run: |
          echo "UI Report Files:"
          ls -R ./public/ui-report
          echo "API Report Files:"
          ls -R ./public/api-report

      - name: Deploy Reports to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

      - name: Output Report URLs
        run: |
          echo "UI Report: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/ui-report/index.html"
          echo "API Report: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/api-report/index.html"
